-- Services
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

-- Local player
local localPlayer = Players.LocalPlayer
local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()
local head = character:WaitForChild("Head")
local camera = game.Workspace.CurrentCamera

-- Highlight setup
local function createHighlight(target)
    local highlight = Instance.new("Highlight")
    highlight.Adornee = target
    highlight.FillColor = Color3.fromRGB(255, 0, 0)  -- Red color for highlight
    highlight.FillTransparency = 0.5  -- Semi-transparent
    highlight.Parent = ReplicatedStorage
    return highlight
end

-- Function to find nearest enemy
local function findNearestEnemy()
    local closestEnemy = nil
    local shortestDistance = math.huge

    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= localPlayer and player.Character and player.Character:FindFirstChild("Head") then
            local enemyHead = player.Character.Head
            local distance = (enemyHead.Position - head.Position).Magnitude

            if distance < shortestDistance then
                shortestDistance = distance
                closestEnemy = player
            end
        end
    end

    return closestEnemy
end

-- Auto-locking on enemy's head and highlight
local function lockOnEnemy()
    local nearestEnemy = findNearestEnemy()

    if nearestEnemy and nearestEnemy.Character then
        local enemyHead = nearestEnemy.Character.Head
        camera.CFrame = CFrame.new(camera.CFrame.Position, enemyHead.Position)  -- Lock camera to enemy's head

        -- Highlight enemy if not already highlighted
        if not enemyHead:FindFirstChild("Highlight") then
            createHighlight(enemyHead)
        end
    end
end

-- Continuously lock onto the nearest enemy
while true do
    lockOnEnemy()
    wait(0.1)  -- Update the lock every 0.1 seconds
end

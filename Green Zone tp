-- Services
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local UserInputService = game:GetService("UserInputService")

-- Local player
local localPlayer = Players.LocalPlayer
local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()
local head = character:WaitForChild("Head")
local camera = game.Workspace.CurrentCamera

-- Enable/Disable settings for Aimlock and Highlight
local isAimlockEnabled = false
local isHighlightEnabled = false

-- Button Settings
local buttonSize = UDim2.new(0, 50, 0, 50)  -- Size of the button
local buttonPositionAimlock = UDim2.new(0, 100, 0, 100)  -- Position of Aimlock button
local buttonPositionHighlight = UDim2.new(0, 100, 0, 160)  -- Position of Highlight button (below Aimlock button)

-- Create ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Parent = localPlayer.PlayerGui

-- Create Aimlock Button
local buttonAimlock = Instance.new("TextButton")
buttonAimlock.Size = buttonSize
buttonAimlock.Position = buttonPositionAimlock
buttonAimlock.Text = "Aimlock ON"
buttonAimlock.BackgroundColor3 = Color3.fromRGB(0, 255, 0)  -- Green when enabled
buttonAimlock.TextColor3 = Color3.fromRGB(255, 255, 255)  -- White text
buttonAimlock.TextSize = 14
buttonAimlock.AnchorPoint = Vector2.new(0.5, 0.5)
buttonAimlock.Parent = screenGui

-- Create Highlight Button
local buttonHighlight = Instance.new("TextButton")
buttonHighlight.Size = buttonSize
buttonHighlight.Position = buttonPositionHighlight
buttonHighlight.Text = "Highlight OFF"
buttonHighlight.BackgroundColor3 = Color3.fromRGB(255, 0, 0)  -- Red when disabled
buttonHighlight.TextColor3 = Color3.fromRGB(255, 255, 255)  -- White text
buttonHighlight.TextSize = 14
buttonHighlight.AnchorPoint = Vector2.new(0.5, 0.5)
buttonHighlight.Parent = screenGui

-- Make the buttons draggable
local draggingAimlock = false
local draggingHighlight = false
local dragInputAimlock, dragStartAimlock, startPosAimlock
local dragInputHighlight, dragStartHighlight, startPosHighlight

local function onDragBegin(input, buttonType)
    if buttonType == "Aimlock" then
        draggingAimlock = true
        dragInputAimlock = input
        dragStartAimlock = input.Position
        startPosAimlock = buttonAimlock.Position
    elseif buttonType == "Highlight" then
        draggingHighlight = true
        dragInputHighlight = input
        dragStartHighlight = input.Position
        startPosHighlight = buttonHighlight.Position
    end
end

local function onDragMove(input, buttonType)
    if buttonType == "Aimlock" and draggingAimlock then
        local delta = input.Position - dragStartAimlock
        buttonAimlock.Position = UDim2.new(startPosAimlock.X.Scale, startPosAimlock.X.Offset + delta.X, startPosAimlock.Y.Scale, startPosAimlock.Y.Offset + delta.Y)
    elseif buttonType == "Highlight" and draggingHighlight then
        local delta = input.Position - dragStartHighlight
        buttonHighlight.Position = UDim2.new(startPosHighlight.X.Scale, startPosHighlight.X.Offset + delta.X, startPosHighlight.Y.Scale, startPosHighlight.Y.Offset + delta.Y)
    end
end

local function onDragEnd(buttonType)
    if buttonType == "Aimlock" then
        draggingAimlock = false
    elseif buttonType == "Highlight" then
        draggingHighlight = false
    end
end

buttonAimlock.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        onDragBegin(input, "Aimlock")
    end
end)

buttonHighlight.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        onDragBegin(input, "Highlight")
    end
end)

buttonAimlock.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        onDragMove(input, "Aimlock")
    end
end)

buttonHighlight.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        onDragMove(input, "Highlight")
    end
end)

buttonAimlock.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        onDragEnd("Aimlock")
    end
end)

buttonHighlight.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        onDragEnd("Highlight")
    end
end)

-- Toggle functionality for Aimlock
buttonAimlock.MouseButton1Click:Connect(function()
    isAimlockEnabled = not isAimlockEnabled
    buttonAimlock.Text = isAimlockEnabled and "Aimlock OFF" or "Aimlock ON"
    buttonAimlock.BackgroundColor3 = isAimlockEnabled and Color3.fromRGB(255, 0, 0) or Color3.fromRGB(0, 255, 0)
end)

-- Toggle functionality for Highlight
buttonHighlight.MouseButton1Click:Connect(function()
    isHighlightEnabled = not isHighlightEnabled
    buttonHighlight.Text = isHighlightEnabled and "Highlight ON" or "Highlight OFF"
    buttonHighlight.BackgroundColor3 = isHighlightEnabled and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(255, 0, 0)
end)

-- Highlight setup
local function createHighlight(target)
    local highlight = Instance.new("Highlight")
    highlight.Adornee = target
    highlight.FillColor = Color3.fromRGB(255, 0, 0)  -- Red color for fill
    highlight.FillTransparency = 0.5  -- Semi-transparent
    highlight.OutlineColor = Color3.fromRGB(255, 0, 0)  -- Red color for outline
    highlight.OutlineTransparency = 0  -- Fully visible outline
    highlight.Parent = ReplicatedStorage
    return highlight
end

-- Function to find nearest enemy (only targets enemies, not teammates)
local function findNearestEnemy()
    local closestEnemy = nil
    local shortestDistance = math.huge

    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= localPlayer and player.Character and player.Character:FindFirstChild("Head") then
            -- Ensure the player is an enemy (not on the same team)
            if player.Team ~= localPlayer.Team then
                local enemyHead = player.Character.Head
                local distance = (enemyHead.Position - head.Position).Magnitude

                if distance < shortestDistance then
                    shortestDistance = distance
                    closestEnemy = player
                end
            end
        end
    end

    return closestEnemy
end

-- Auto-locking on enemy's head and highlight
local function lockOnEnemy()
    if not isAimlockEnabled then return end  -- Only lock if Aimlock is enabled

    local nearestEnemy = findNearestEnemy()

    if nearestEnemy and nearestEnemy.Character then
        local enemyCharacter = nearestEnemy.Character
        local enemyHead = enemyCharacter:FindFirstChild("Head")
        local enemyTorso = enemyCharacter:FindFirstChild("HumanoidRootPart") -- Use the humanoid root part if Head doesn't work well

        -- Lock the camera to the enemy's head or torso
        if enemyHead then
            camera.CFrame = CFrame.new(camera.CFrame.Position, enemyHead.Position)
        elseif enemyTorso then
            camera.CFrame = CFrame.new(camera.CFrame.Position, enemyTorso.Position)
        end

        -- Highlight the enemy if enabled and not already highlighted
        if isHighlightEnabled and not enemyCharacter:FindFirstChild("Highlight") then
            createHighlight(enemyCharacter)  -- Highlight the entire character (Head and Body)
        end
    end
end

-- Continuously lock onto the nearest enemy
while true do
    lockOnEnemy()
    wait(0.1)  -- Update the lock every 0.1 seconds
end

local player = game.Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Create the ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "RoundedMenuGui"
screenGui.Parent = playerGui

-- Create the toggle button
local toggleButton = Instance.new("TextButton")
toggleButton.Name = "ToggleButton"
toggleButton.Size = UDim2.new(0, 100, 0, 50) -- 100x50px
toggleButton.Position = UDim2.new(0.05, 0, 0.05, 0) -- Top-left corner
toggleButton.BackgroundColor3 = Color3.new(0.2, 0.6, 0.2) -- Green
toggleButton.Text = "Toggle Menu"
toggleButton.Font = Enum.Font.GothamBold
toggleButton.TextSize = 18
toggleButton.TextColor3 = Color3.new(1, 1, 1)
toggleButton.Parent = screenGui

-- Add rounded corners to the toggle button
local toggleButtonCorner = Instance.new("UICorner")
toggleButtonCorner.CornerRadius = UDim.new(0, 10)
toggleButtonCorner.Parent = toggleButton

-- Create the main menu frame
local menuFrame = Instance.new("Frame")
menuFrame.Name = "MenuFrame"
menuFrame.Size = UDim2.new(0, 300, 0, 200) -- Width: 300px, Height: 200px
menuFrame.Position = UDim2.new(0.5, -150, 0.5, -100) -- Center of the screen
menuFrame.AnchorPoint = Vector2.new(0.5, 0.5)
menuFrame.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2) -- Dark gray
menuFrame.Visible = false -- Initially hidden
menuFrame.Parent = screenGui

-- Add rounded corners to the menu frame
local uiCorner = Instance.new("UICorner")
uiCorner.CornerRadius = UDim.new(0, 20) -- Adjust the radius for roundness
uiCorner.Parent = menuFrame

-- Add a title to the menu
local titleLabel = Instance.new("TextLabel")
titleLabel.Name = "TitleLabel"
titleLabel.Size = UDim2.new(1, 0, 0, 50) -- Full width, height: 50px
titleLabel.Position = UDim2.new(0, 0, 0, 0)
titleLabel.BackgroundTransparency = 1 -- Transparent background
titleLabel.Text = "Menu Title"
titleLabel.Font = Enum.Font.GothamBold
titleLabel.TextSize = 24
titleLabel.TextColor3 = Color3.new(1, 1, 1) -- White text
titleLabel.Parent = menuFrame

-- Add a close button
local closeButton = Instance.new("TextButton")
closeButton.Name = "CloseButton"
closeButton.Size = UDim2.new(0, 50, 0, 50) -- 50x50px button
closeButton.Position = UDim2.new(1, -60, 0, 10) -- Top-right corner with padding
closeButton.AnchorPoint = Vector2.new(1, 0)
closeButton.BackgroundColor3 = Color3.new(1, 0.2, 0.2) -- Red color
closeButton.Text = "X"
closeButton.Font = Enum.Font.GothamBold
closeButton.TextSize = 18
closeButton.TextColor3 = Color3.new(1, 1, 1)
closeButton.Parent = menuFrame

-- Add rounded corners to the close button
local closeButtonCorner = Instance.new("UICorner")
closeButtonCorner.CornerRadius = UDim.new(1, 0) -- Fully round button
closeButtonCorner.Parent = closeButton

-- Dragging functionality
local isDragging = false
local dragStart, startPos

local function updateDrag(input)
    local delta = input.Position - dragStart
    menuFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
end

menuFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        isDragging = true
        dragStart = input.Position
        startPos = menuFrame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                isDragging = false
            end
        end)
    end
end)

menuFrame.InputChanged:Connect(function(input)
    if isDragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
        updateDrag(input)
    end
end)

-- Toggle menu visibility
local menuVisible = false

toggleButton.MouseButton1Click:Connect(function()
    menuVisible = not menuVisible
    menuFrame.Visible = menuVisible
end)

-- Close button functionality
closeButton.MouseButton1Click:Connect(function()
    menuFrame.Visible = false
    menuVisible = false
end)
